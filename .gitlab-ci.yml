stages:
  - build
  - deploy
variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
  - docker info
  script:
    - echo "$CI_REGISTRY_PASSWORD_BUILD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  before_script:
    - apk update
    - apk add git
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apk add openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$GIT_DEPLOYER")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $SERVER_USER@$SERVER_IP "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD"
    - ssh $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT"
    - ssh $SERVER_USER@$SERVER_IP "docker container rm -f my-app || true"
    - ssh $SERVER_USER@$SERVER_IP "docker run -d -p 8585:80 --network=$NETWORK --name my-app $TAG_COMMIT"
  environment:
    name: production
    url: http://212.71.254.133
  only:
    - main